<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>rabbitmq使用总结</title>
      <link href="/2020/111565466.html"/>
      <url>/2020/111565466.html</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1><span id="rabbitmq是什么">rabbitmq是什么？</span></h1><ol><li>rabbitmq是一个消息中间件，即负责接收发送端的消息，将消息存储，并将消息发送给接收端如下图。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/DeepWu/PicGoBlog/img/20201008175516.png" alt></p><ol start="2"><li>rabbitmq内部结构主要包括交换机和队列，通过交换机与队列不同的绑定模式使得rabbitmq支持不同模式的消息传输。 注意：交换机仅仅用于接收并分发消息，并不用于存储消息，队列用于存储消息。</li></ol><h1><span id="rabbitmq如何安装以及如何可视化查看">rabbitmq如何安装以及如何可视化查看？</span></h1><h2><span id="如何安装rabbitmq">如何安装rabbitmq？</span></h2><ol><li><p>直接百度一下。</p><p><a href="https://blog.csdn.net/woaizhengjie/article/details/80894835" target="_blank" rel="noopener">参考链接</a> </p><p>注意：rabbitmq的安装需要首先安装erlang，并且erlang和rabbitmq之间有对应的匹配版本。</p></li><li><p><a href="https://www.rabbitmq.com/#getstarted" target="_blank" rel="noopener">下载与安装官方链接</a></p><p>注释：该网页需要耐心加载一会，然后下拉，在下方会出现如下图所示。</p><p>1<a href="![](https://cdn.jsdelivr.net/gh/DeepWu/PicGoBlog/img/20201008192647.png"></a></p></li></ol><h2><span id="可视化查看">可视化查看</span></h2><ol><li>rabbitmq安装启动之后，提供一个可视化操作网页，<a href="http://127.0.0.1:15672/#/，登陆用户名和密码进入管理页面。默认用户名和密码为：guest" target="_blank" rel="noopener">http://127.0.0.1:15672/#/，登陆用户名和密码进入管理页面。默认用户名和密码为：guest</a> 和 guest，页面如下：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/DeepWu/PicGoBlog/img/20201008193750.png" alt></p><h1><span id="rabbitmq的基本思想编程必看">rabbitmq的基本思想（编程必看）</span></h1><p>rabbitmq示意图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/DeepWu/PicGoBlog/img/20201008201217.png" alt></p><ol><li>上图中生产者一般是我们的客户端的程序（代码），本文以均以java为例，用于将消息发送给rabbitmq服务器。</li><li>rabbitmq服务器包含多个虚拟机，可以将其理解为多个rabbitmq，彼此独立。（也就是在一台服务器上安装一次rabbitmq可以有多个相互隔离的rabbitmq服务器，默认虚拟机名字为 / ，可在管理页面的admin标签中查看。）</li><li>每个虚拟机中包含 多个交换机和多个队列，交换机和队列都是客户端（生产者和接受者都可以）指定的（代码中指定交换机和队列的名称，若服务器中没有则自动新建。）</li><li><strong>客户端代码中可以指定交换机的模式，实现消息在不同模式下的发送和接收</strong>。</li><li>消费者从指定队列中获取消息。目前rabbitmq支持三种：1. 通过消费者对象中的回调函数不断处理接收到的数据。（该方法会一直监听，未提供停止的方法，有时候使用很恶心……，但是该方法最常用）2. 很早之前就使用的consumer.nextDelivery(); 该方法据说因为存在问题，目前不推荐使用，自行百度。 3. pull拉去信息。（该方法非常慢。）</li></ol><h1><span id="rabbitmq的7种模式以及具体实现示例">rabbitmq的7种模式，以及具体实现示例</span></h1><p><a href="https://www.rabbitmq.com/getstarted.html" target="_blank" rel="noopener">建议阅读官方示例</a>，如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/DeepWu/PicGoBlog/img/20201008195134.png" alt></p><h2><span id="本文对最常用的三种模式进行说明-fanout-directtopic">本文对最常用的三种模式进行说明 （fanout 、direct,topic）</span></h2><p><a href="https://www.656463.com/article/RabbitMQszExchangefanoutdirecttopicms_8" target="_blank" rel="noopener">参考文章</a></p><p>注意示例代码与模式具体内容推荐看官方网站示例。</p><h3><span id="fanout发散模式">fanout（发散模式）</span></h3><p><img src="https://cdn.jsdelivr.net/gh/DeepWu/PicGoBlog/img/20201008204327.png" alt></p><ol><li>该模式下，发送到交换机的信息会被转发到与其绑定的所有队列上。（通过发送者和消费者都可以绑定，不不过发送的信息只能发送到当前已经绑定的队列中。交换机与队列的绑定关系可以在管理页面的交换机标签查看。）</li></ol><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//示例代码</span>Channel channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 建立连接通道</span>channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span><span class="token string">"exchangeName"</span><span class="token punctuation">,</span> <span class="token string">"fanout"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//创建名称为exchangeName的交换机，并设置模式为fanout</span>channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">"queueName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//创建队列</span>channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">"queueName"</span><span class="token punctuation">,</span> <span class="token string">"exchangeName"</span><span class="token punctuation">,</span> <span class="token string">"routingKey"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//绑定交换机与队列，该摸下下routingKey没用</span>channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">"queueName1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">"queueName1"</span><span class="token punctuation">,</span> <span class="token string">"exchangeName"</span><span class="token punctuation">,</span> <span class="token string">"routingKey1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> messageBodyBytes <span class="token operator">=</span> <span class="token string">"hello world"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//路由键需要设置为空 </span>channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span><span class="token string">"exchangeName"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> MessageProperties<span class="token punctuation">.</span>PERSISTENT_TEXT_PLAIN<span class="token punctuation">,</span> messageBodyBytes<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 发送消息，由于该摸下下不通过路由键判断消息发送给哪个队列，因此设置为空。direct和topic模式需要具体设置路由键</span></code></pre><h2><span id="direct-直连模式">direct （直连模式）</span></h2><ol><li>该模式下，将消息发送到routingKey指定的队列中，如下图</li></ol><p><img src="https://cdn.jsdelivr.net/gh/DeepWu/PicGoBlog/img/20201008205554.png" alt></p><ol start="2"><li>该模式下，绑定交换机与队列时需要指定routingKey，发送的消息只会发送给绑定了相同routingKey的队列中。</li></ol><pre class=" language-java"><code class="language-java">Channel channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span><span class="token string">"exchangeName"</span><span class="token punctuation">,</span> <span class="token string">"direct"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//direct fanout topic </span>channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">"queueName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">"queueName"</span><span class="token punctuation">,</span> <span class="token string">"exchangeName"</span><span class="token punctuation">,</span> <span class="token string">"routingKey"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> messageBodyBytes <span class="token operator">=</span> <span class="token string">"hello world"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//需要绑定路由键 </span>channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span><span class="token string">"exchangeName"</span><span class="token punctuation">,</span> <span class="token string">"routingKey"</span><span class="token punctuation">,</span> MessageProperties<span class="token punctuation">.</span>PERSISTENT_TEXT_PLAIN<span class="token punctuation">,</span> messageBodyBytes<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2><span id="topic主题模式">Topic(主题模式)</span></h2><ol><li>该模式只是在direct模式的基础上支持了routingKey的模糊匹配。比如：绑定时，提供了一个队列关心的主题“#.log.#”，即表示该队列关心所有涉及log的消息。</li></ol><pre class=" language-java"><code class="language-java">Channel channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span><span class="token string">"exchangeName"</span><span class="token punctuation">,</span> <span class="token string">"topic"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//direct fanout topic </span>channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">"queueName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">"queueName"</span><span class="token punctuation">,</span> <span class="token string">"exchangeName"</span><span class="token punctuation">,</span> <span class="token string">"routingKey.*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> messageBodyBytes <span class="token operator">=</span> <span class="token string">"hello world"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span><span class="token string">"exchangeName"</span><span class="token punctuation">,</span> <span class="token string">"routingKey.one"</span><span class="token punctuation">,</span> MessageProperties<span class="token punctuation">.</span>PERSISTENT_TEXT_PLAIN<span class="token punctuation">,</span> messageBodyBytes<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 发送的主题键为routingKey.one，queueName依然可以接收该信息。</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> java开源服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录博客使用教程</title>
      <link href="/2020/111552018.html"/>
      <url>/2020/111552018.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>论文盲审立帖为证</title>
      <link href="/2020/051319279.html"/>
      <url>/2020/051319279.html</url>
      
        <content type="html"><![CDATA[<h1><span id="大数据开发之linux学习二">大数据开发之Linux学习二</span></h1><h1><span id="论文盲审">论文盲审</span></h1><p>盲审通过之后，三天内一定做关于导师选择、论文盲审两期视频，造福师弟师妹。</p><h2><span id="研究生导师选择经验">研究生导师选择经验</span></h2><h2><span id="论文盲审经验">论文盲审经验</span></h2>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 研究生 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>研究生小论文写作指南</title>
      <link href="/2020/050919279.html"/>
      <url>/2020/050919279.html</url>
      
        <content type="html"><![CDATA[<h1><span id="研究生小论文写作指南">研究生小论文写作指南</span></h1><h2><span id="合适的参考文献获取">合适的参考文献获取</span></h2><ol><li>寻找该领域顶级会议和期刊杂志的文章</li><li>关注该领域综述性论文，好的综述性论文会列举近年来顶级的研究情况</li><li>引用次数高的文献</li><li>收录一篇好论文的参考文献的参考文献的参考文献….（发散性寻找好的文献）</li></ol><h2><span id="论文题目-摘要-关键词">论文题目、摘要、关键词</span></h2><h3><span id="题目">题目</span></h3><p>简介凝练 + 重点突出创新点 </p><h3><span id="摘要">摘要</span></h3><ol><li>研究目的，即为什么做这篇研究。（示例：为了提高遥感图像滩涂区域水体提取精度，提出了一种….的方法，该方法可以实现滩涂等地形复杂地区的水体精准提取）</li><li>对于方法的具体描述（相比于传统方法所提出方法的改进点在哪）。</li><li>介绍具体工作（主要做了哪些工作从而解决了研究问题）</li><li>总结（示例：本文实验证明了神经网络在遥感图像滩涂等特殊区域水体提取的有效性，并验证了模型对于滩涂类水体的提取精度。利用windows操作平台进行仿真实验，并搭建了基于Tensorflow的深度卷积神经网络训练平台，对所提方法的滩涂类水体提取能力进行验证。）</li></ol><h3><span id="引言">引言</span></h3><ol><li>问题和目的</li><li>前人的工作和背景情况</li><li>本文问题的详细介绍</li></ol><h2><span id="研究现状">研究现状</span></h2><ol><li>按照时间顺序阐述近年来的研究</li><li>对研究工作分类评述（经典文献详细说明，过时观点简单说）</li><li>总结现有工作的优势与不足（主要是不足）</li><li>综上说明本文研究的必要性</li></ol><h2><span id="论文主体框架">论文主体框架</span></h2><ol><li>提出一个模型</li><li>对模型展开分析</li><li>实验</li><li>实验结果 讨论和叙述</li><li>总结</li></ol><h2><span id="总结与展望">总结与展望</span></h2><ol><li>研究成果的总结</li><li>未来工作的展望</li></ol>]]></content>
      
      
      <categories>
          
          <category> 写作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 研究生 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据开发之Linux学习二</title>
      <link href="/2020/050619279.html"/>
      <url>/2020/050619279.html</url>
      
        <content type="html"><![CDATA[<h1><span id="大数据开发之linux学习二">大数据开发之Linux学习二</span></h1><h2><span id="linux系统目录介绍">Linux系统目录介绍</span></h2><ol><li>Linux中一切皆文件。主要文件目录结构如下图：</li></ol><img src="http://q9nd0oq0r.bkt.clouddn.com/4.1.jpg" alt="Linux系统主要目录结构" style="zoom: 80%;"><ol start="2"><li>各个文件的主要功能如下：</li></ol><img src="http://q9nd0oq0r.bkt.clouddn.com/4.2.jpg" alt="文件功能图1" style="zoom: 80%;"><img src="http://q9nd0oq0r.bkt.clouddn.com/4.3.jpg" alt="文件功能图2" style="zoom:67%;"><img src="http://q9nd0oq0r.bkt.clouddn.com/4.4.jpg" alt="文件功能图1" style="zoom: 67%;"><img src="http://q9nd0oq0r.bkt.clouddn.com/4.5.jpg" alt="文件功能图2" style="zoom: 80%;"><img src="http://q9nd0oq0r.bkt.clouddn.com/4.6.jpg" alt="文件功能图1" style="zoom:67%;"><h2><span id="远程操作linux系统的工具xshell-xftp">远程操作Linux系统的工具（Xshell、XFTP）</span></h2><ol><li>为什么使用远程工具？</li></ol><p>公司中服务器通常为开发小组公用（通常位于工作地点很远的地方），因此需要远程登陆Linux系统进行操作。常用工具包括Xshell、XFTP等。</p><ol start="2"><li>两种软件使用要求：</li></ol><p><strong>Linux系统必须开启sshd服务，该服务会监听22号端口。</strong> </p><p>查看sshd服务是否开启方法：</p><pre class=" language-java"><code class="language-java">setup   <span class="token operator">-</span>》   系统服务   <span class="token operator">-</span>》   标记星号的服务表示已启动的服务</code></pre><h3><span id="xshell用于远程操作linux系统">Xshell用于远程操作Linux系统</span></h3><p>软件的安装与连接设置：</p><pre class=" language-java"><code class="language-java"><span class="token number">1</span><span class="token punctuation">.</span>下载软件，进行安装。<span class="token number">2</span><span class="token punctuation">.</span>打开软件，新建一个会话（即新建一个连接）如下图参数设置。该步骤需要Linux的IP地址。<span class="token number">3</span><span class="token punctuation">.</span>在Linux系统的终端中输入ifconfig查询LinuxIP地址。<span class="token number">4</span><span class="token punctuation">.</span>输入用户名和密码，完成登陆</code></pre><img src="http://q9nd0oq0r.bkt.clouddn.com/4.7.jpg" alt="Xshell新建会话属性设置图" style="zoom: 67%;"><h3><span id="xftp用于远程上传和下载文件">Xftp用于远程上传和下载文件</span></h3><p>软件的安装与连接设置：</p><pre class=" language-java"><code class="language-java"><span class="token number">1</span><span class="token punctuation">.</span>下载安装Xftp软件<span class="token number">2</span><span class="token punctuation">.</span>新建会话，配置会话参数，如下图所示。<span class="token number">3</span><span class="token punctuation">.</span>连接后，Linux目录可能出现中文乱码。按照中文乱码解决图操作，然后右键刷新。</code></pre><img src="http://q9nd0oq0r.bkt.clouddn.com/4.8.jpg" alt="Xftp会话" style="zoom: 80%;"><img src="http://q9nd0oq0r.bkt.clouddn.com/4.9.png" alt="中文乱码解决图" style="zoom: 67%;"><h3><span id="securecrt远程登陆linux系统软件的使用">SecureCRT远程登陆linux系统软件的使用</span></h3><p>为什么需要？（大数据开发中常用）</p><blockquote><p>Xshell软件有时安装后缺少.dll文件</p></blockquote><p>​        安装与连接设置？</p><pre class=" language-java"><code class="language-java"><span class="token number">1</span><span class="token punctuation">.</span>下载安装SecureCRT软件并安装<span class="token number">2</span><span class="token punctuation">.</span>连接、新建会话<span class="token number">3</span><span class="token punctuation">.</span>按照提示，点击下一步<span class="token number">4</span><span class="token punctuation">.</span>配置会话，如下图<span class="token number">5</span><span class="token punctuation">.</span>连接，输入用户名和密码登陆Linux<span class="token number">6</span><span class="token punctuation">.</span>中文乱码解决图如下图。</code></pre><img src="http://q9nd0oq0r.bkt.clouddn.com/4.10.jpg" alt="SecureCRT会话配置图" style="zoom:67%;"><img src="http://q9nd0oq0r.bkt.clouddn.com/4.11.jpg" alt="SecureCRT中文乱码解决图" style="zoom:67%;"><h2><span id="文本编辑器vi-vim">文本编辑器（Vi、Vim）</span></h2><blockquote><p>vim可以看作vi的增强版，都是文本编辑器</p></blockquote><ol><li>编辑器三种模式</li></ol><pre class=" language-jav"><code class="language-jav">1.正常模式：可以使用各种快捷键完成文档的编辑工作，包括：光标移动、删除整行、删除字符、复制粘贴等。2.插入模式/编辑模式：该模式下，程序员可以输入内容。按下i l o O a A r R等任意一个字母之后进入编辑模式3. 命令行模式提供相关指令，完成读取、存盘、显示行号等动作</code></pre><img src="http://q9nd0oq0r.bkt.clouddn.com/4.12.jpg" alt="三种模式切换指令图" style="zoom: 80%;"><ol start="2"><li>常用指令整理(<a href="https://www.jianshu.com/p/0d2d2ec71408" target="_blank" rel="noopener">引用链接</a>)</li></ol><pre class=" language-java"><code class="language-java">切换到输入模式i    在光标前插入                                I    跳到当前行句首进入输入模式a<span class="token punctuation">,</span>    在光标后插入                                A    跳到当前行句尾进入输入模式o    跳到下一行并创建新的一行进入输入模式<span class="token punctuation">(</span>常用<span class="token punctuation">)</span>      O      跳到上一行并创建新的一行进入输入模式r    进入取代模式一次，替换后进入移动模式    R    进入取代模式，直到按Esc后退出进入移动模式移动k<span class="token punctuation">,</span> j<span class="token punctuation">,</span> h<span class="token punctuation">,</span> <span class="token function">l</span>    <span class="token punctuation">(</span>↑<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>↓<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>←<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>→<span class="token punctuation">)</span><span class="token punctuation">,</span> 向下移动<span class="token number">4</span>行，可以 4j，又或者 <span class="token number">4</span> <span class="token operator">&lt;</span>Enter<span class="token operator">></span>gg    回到开头G    移动到这个档案的最后一行行数<span class="token operator">+</span>G    跳到所输入行数的那一行<span class="token number">0</span> ，<span class="token punctuation">[</span>Home<span class="token punctuation">]</span>，<span class="token operator">^</span>    跳到当前行行头，个人喜欢用I$ <span class="token punctuation">,</span> <span class="token punctuation">[</span>End<span class="token punctuation">]</span>    跳到当前行行尾，个人喜欢用AH，M， L    移动到这个屏幕的最上方，中间，最下方的第一个字符<span class="token operator">+</span>，<span class="token operator">-</span>    光标移动到非空格符的下，上一行w，b，e    下一个词词首，上一个词词首，e跳到这个单词词尾Ctrl<span class="token operator">+</span> <span class="token punctuation">[</span>f<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span>，<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span>    下，上翻页Ctrl<span class="token operator">+</span> <span class="token punctuation">[</span>d<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span>，<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span>    下，上翻半页f 字母    查找并跳到字母修改c i <span class="token string">'    到这行的'</span> <span class="token string">'里面，并清空'</span> '里面的内容，进入输入模式<span class="token punctuation">,</span><span class="token punctuation">(</span>c是修改的意思<span class="token punctuation">)</span>dd    删除当前行d i w    删除当前单词<span class="token punctuation">,</span> d f space把单词后面的空格也删除掉 还有d t 空格<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>yy    复制当前行nyy    n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 <span class="token number">20</span> 行<span class="token punctuation">(</span>常用<span class="token punctuation">)</span>p<span class="token punctuation">,</span> P    p是将已复制的数据在光标下一行贴上<span class="token punctuation">,</span> P是上一行u    撤销<span class="token punctuation">.</span>    重复前一个动作<span class="token operator">:</span><span class="token operator">%</span>s<span class="token operator">/</span>word1<span class="token operator">/</span>word2<span class="token operator">/</span>g    从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！<span class="token punctuation">(</span>常用<span class="token punctuation">)</span><span class="token operator">:</span>wq    储存后离开，若为 <span class="token operator">:</span>wq<span class="token operator">!</span> 则为强制储存后离开 <span class="token punctuation">(</span>常用<span class="token punctuation">)</span><span class="token operator">:</span>w <span class="token punctuation">[</span>filename<span class="token punctuation">]</span>    将编辑的数据储存成另一个档案（类似另存新档）注释添加注释方法一：<span class="token punctuation">[</span>Ctrl<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span> 或 <span class="token punctuation">[</span>V<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span>，进入选择模式，选中你要注释的行，然后按 <span class="token punctuation">[</span>I<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">,</span>输入注释符<span class="token punctuation">.</span>方法二： <span class="token operator">:</span>起始行号<span class="token punctuation">,</span>结束行号s<span class="token operator">/</span><span class="token operator">^</span><span class="token operator">/</span>注释符<span class="token operator">/</span>g（注意冒号）。删除注释方法一：Ctrl <span class="token operator">+</span> v 进入块选择模式，选中你要删除的行首的注释符号，注意 <span class="token comment" spellcheck="true">// 要选中两个，选好之后按 d 即可删除注释，ESC 保存退出。</span>方法二： <span class="token operator">:</span>起始行号<span class="token punctuation">,</span>结束行号s<span class="token operator">/</span><span class="token operator">^</span>注释符<span class="token comment" spellcheck="true">//g（注意冒号）。</span>分屏命令模式下：<span class="token operator">:</span><span class="token keyword">new</span>，新建文件并分屏， 快捷键，Ctrl<span class="token operator">+</span>W，然后马上按n键<span class="token operator">:</span>spilt 水平分屏，将当前屏分为两个，水平的。 Ctrl <span class="token operator">+</span> w<span class="token punctuation">,</span> s<span class="token operator">:</span>vsplit 垂直分屏，将当前屏分为两个，垂直的。 Ctrl <span class="token operator">+</span> w<span class="token punctuation">,</span> v<span class="token operator">:</span>only 取消分屏，取消当前的屏，当前屏指的是光标所在屏。关闭当前屏<span class="token operator">:</span> Ctrl<span class="token operator">+</span>w，c。如何关闭其他窗口<span class="token operator">?</span>Ctrl <span class="token operator">+</span> w<span class="token punctuation">,</span> o载入文件<span class="token operator">:</span>vs 文件路径<span class="token operator">/</span>文件名 在新的垂直分屏中打开文件<span class="token operator">:</span>sv 水平分屏打开文件</code></pre>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据开发 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据开发之Linux学习一</title>
      <link href="/2020/050519279.html"/>
      <url>/2020/050519279.html</url>
      
        <content type="html"><![CDATA[<h1><span id="大数据开发之linux学习一">大数据开发之Linux学习一</span></h1><h2><span id="linux简介">Linux简介</span></h2><ol><li>贝尔实验室开发出Unix，多个公司在此基础上推出了商业版。（付费） Stallman不同意，提出了GNU计划。<img src="http://q9nd0oq0r.bkt.clouddn.com/3.1.png" alt="Linux的出现" style="zoom: 67%;"></li><li>GNU计划图，即包括：内核、shell、各种外部软件的系统结构。<img src="http://q9nd0oq0r.bkt.clouddn.com/3.2.jpg" alt="GUN计划" style="zoom: 50%;"></li><li>各个公司在Unix基础上提出了商业版，Torvalds在其中一个商业版Unix基础上，开发出了Linux内核。<img src="http://q9nd0oq0r.bkt.clouddn.com/3.3.jpg" alt="Linux与Unix关系图" style="zoom: 67%;"></li></ol><h2><span id="虚拟机安装">虚拟机安装</span></h2><blockquote><p>下载虚拟机软件（VMware），安装软件。</p><p><strong>注意事项：</strong>进入电脑BIOS中（开机画面按F2/F10/ESC），设置虚拟化设备支持。</p></blockquote><h2><span id="centos安装前的准备工作">centos安装前的准备工作</span></h2><ol><li><p>先分配一个虚拟机空间（创建虚拟机）</p></li><li><p>准备centos安装文件(.iso格式)</p></li><li><p>在创建的虚拟机空间，右键、属性、CD/DVD，安装centos</p></li><li><p><strong>网络适配器的设置</strong>：通常选择NAT模式</p><p> <a href="https://deepwu.github.io/2020/050522046.html">虚拟机三种网络连接区别</a></p></li></ol><h2><span id="centos安装">centos安装</span></h2><p>安装注意事项：</p><ol><li>手动分区（linux至少三个分区： /boot、swap、/ ）</li></ol><pre class=" language-java"><code class="language-java"><span class="token number">1</span><span class="token punctuation">.</span> sda 表示硬盘<span class="token number">2</span><span class="token punctuation">.</span> <span class="token operator">/</span>boot  200M<span class="token number">3</span><span class="token punctuation">.</span> swap 和虚拟机物理内存一样大，用于临时充当内存<span class="token number">3</span><span class="token punctuation">.</span> <span class="token operator">/</span> 剩余所有空间分配给根分区</code></pre><ol start="2"><li>手动选择组件</li></ol><pre class=" language-java"><code class="language-java"><span class="token number">1</span><span class="token punctuation">.</span> 基本系统中<span class="token operator">:</span>兼容程序库、基本、调试工具<span class="token number">2</span><span class="token punctuation">.</span> 应用程序： 互联网浏览器<span class="token number">3</span><span class="token punctuation">.</span> 桌面： 默认</code></pre><ol start="3"><li>第一次启动后会出现Kdump选项，用于系统诊断错误信息</li></ol><h2><span id="centos联网">centos联网</span></h2><ol><li>windows系统下查看iP地址： ipconfig         linux系统下：ifconfig       </li><li>ifconfig命令显示结果如下图所示。</li></ol><img src="http://q9nd0oq0r.bkt.clouddn.com/3.4.jpg" alt="ifconfig运行结果" style="zoom: 80%;"><ol start="3"><li>桌面右上角的联网标志，选择eth0网卡。（不同linux版本可能存在不同的联网设置方式，通常该部分由公司运营负责）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据开发 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机网络连接的三种方式</title>
      <link href="/2020/050522046.html"/>
      <url>/2020/050522046.html</url>
      
        <content type="html"><![CDATA[<h1><span id="虚拟机网络连接的三种方式">虚拟机网络连接的三种方式</span></h1><h2><span id="桥接模式">桥接模式</span></h2><blockquote><p>虚拟机与母机的IP地址在同一个网段，可以相互通信。</p></blockquote><p>优点：同一个网段内不同母机（母机指虚拟机安装的机器）上的虚拟机也可以相互通信。</p><p>缺点：一个网段的IP地址是有限的。比如（192.168.14.0~192.168.14.255，其中0为保留地址，255为广播地址，1为网关地址，因此实际可以使用的只有253个地址）</p><h2><span id="nat模式">NAT模式</span></h2><blockquote><p>网络地址转换模式</p></blockquote><p>优点：该模式可以生成新的母机IP地址。（假设原系统为windows，则该模式下，在原系统有两个IP地址：原有IP地址和新IP地址）centos的地址与新IP地址处于同一个网段</p><p>缺点：内网其他人不能和虚拟机通讯。</p><h2><span id="主机模式">主机模式</span></h2><blockquote><p>单独的一台电脑，通常不使用</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据开发 </tag>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于hexo的博客搭建和更新</title>
      <link href="/2020/050119279.html"/>
      <url>/2020/050119279.html</url>
      
        <content type="html"><![CDATA[<h1><span id="基于hexo的博客搭建和更新">基于hexo的博客搭建和更新</span></h1><h2><span id="博客搭建教程">博客搭建教程</span></h2><ul><li><p><a href="https://www.bilibili.com/video/BV1je41147Ma?p=1" target="_blank" rel="noopener">B站视频教程</a></p></li><li><p><a href="https://rika0-0.github.io/" target="_blank" rel="noopener">博客教程地址</a></p></li><li><p><a href="https://blog.csdn.net/jspnetcn/article/details/104111651" target="_blank" rel="noopener">博客主题设置与优化地址</a></p></li></ul><h1><span id="博客安装-启动指南">博客安装、启动指南</span></h1><ol><li><a href="https://hexoscript.gitbook.io/hexo-script/shi-yong-bu-zhou/yi-jian-an-zhuang-hexo-bo-ke" target="_blank" rel="noopener">博客安装官方指南</a></li></ol><h1><span id="博客本地测试-远程更新">博客本地测试、远程更新</span></h1><h2><span id="本地查看博客">本地查看博客</span></h2><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//cmd中执行</span>cd hexoblog  <span class="token comment" spellcheck="true">//进入hexoblog文件夹</span>hexo s       <span class="token comment" spellcheck="true">//启动博客</span><span class="token comment" spellcheck="true">//打开cmd中的网址，进入博客</span></code></pre><h2><span id="远程更新博客">远程更新博客</span></h2><pre class=" language-java"><code class="language-java">source up<span class="token punctuation">.</span>sh</code></pre><h1><span id="新建博客">新建博客</span></h1><blockquote><p>进入博客目录的hexoblog目录</p><p>hexo new “新文章的名字”         // 在source /_post目录下创建.md文档</p></blockquote><h1><span id="发布过程">发布过程</span></h1><blockquote><p>hexo clean //清理public文件夹及其内容</p><p>hexo g   //生成public文件夹及其内容</p><p>hexo s  // 预览</p><p>localhost:4000  // 网址预览</p><p>hexo d   //发布</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
